from app.services.optimize.bayesian_optimizer import BayesianOptimizer

round_explanatory_variable = [[25.0, 5.0], [50.84443440871049, 6.118391427724784], [50.842883387566886, 6.777522518931694], [49.970215322105055, 20.0], [50.84245432483737, 6.960126293484539], [50.757892576009056, 20.0], [52.60329128979605, 8.656422708033993], [49.209406996667454, 3.875864058273747], [49.08477214285788, 7.463636915537541], [50.09487242665855, 8.748061669], [60.0, 3.0], [15.0, 20.0], [47.87709962953099, 6.288062252555932], [60.0, 20.0], [31.44620889084562, 20.0], [35.86940191226421, 15.35115648], [28.47353931142249, 16.056042739215243], [31.78825810825939, 13.34756425402758], [30.871439678054028, 13.164620807113632], [35.31434549576311, 12.589929874792864], [15.0, 13.873606872737405], [27.3158409, 13.711846565461682], [38.57933594400606, 10.733711596519248], [32.986942676402904, 11.74543475992693], [32.93307707857454, 11.70958151532272], [34.57956955345051, 12.313547052536386], [41.36979676191709, 8.485352224418477], [41.58716852357159, 8.368518373671854], [38.352803674402296, 9.250268599], [37.40498726847453, 9.350638235], [36.09876773, 9.456919627577715], [35.33735924088566, 9.562111023], [35.58834195795358, 9.468649962235816], [37.17886003, 8.849185926699386], [37.33085775048001, 8.767472239], [37.35631864780531, 8.730261156579726], [33.97491289579335, 9.930600569790348], [37.58253382148516, 9.486118142726072], [60.0, 6.940292427982663], [39.24290254473185, 7.694012207], [29.63471630369324, 10.809414184821872], [27.900614952652525, 10.814315469334346], [27.633783203764303, 10.78148931557799], [29.960691688258848, 10.26013589315071], [29.90499700843109, 10.238769040576438], [23.54736983018629, 10.381138826282898], [60.0, 14.601292343885682], [30.05005094033957, 9.647191881], [29.96988467, 9.643313542], [20.7054706701314, 16.748023514092143], [55.53120750649529, 13.408243921105887], [22.568197096150787, 15.414279813823557], [49.05314086338629, 14.266682927800485]]
round_objective_variable =  [88.0, 6.527515127113036, 7.396405117806283, 1.4847548626375937, 6.932669344289813, 1.9011744992708484, 5.095751015520417, 5.808974384526452, 6.709380392965821, 5.490520114241551, 3.3754146674605945, 1.9114582199907264, 6.746335892699629, 1.0, 4.603655660034855, 5.701902883718132, 6.017063160976858, 8.006293032781194, 6.909013050712355, 7.108953214, 4.20894297, 6.588860941459592, 6.992391141372044, 7.555002150863531, 7.642042336277119, 6.5067131593659004, 7.891991552259827, 7.507439911710193, 8.165617315119741, 8.460224703167572, 8.569361114, 8.190412184, 7.989652050063969, 8.396840305709793, 8.242638388425913, 7.774949644425822, 7.799555309, 7.458660992804666, 4.205271952698648, 7.789186202132978, 8.763762030129937, 8.591771714, 8.217970513020024, 8.706469213074477, 9.229560634260622, 7.402224714508464, 1.533298323923021, 9.122819743, 6.0, 2.0, 7.0, 7.0, 66.0]
session_explanatory_variable = [[125.0, 15.0, 3.0], [136, 41.198463880597984, 1.0]]
session_objective_variable = [33.6, 10.0, 1.0]

def test_bayesian_optimizer():
    try:
        print("[テスト] ベイズ最適化テスト")
        print()

        print("ラウンド最適化")
        # ラウンド最適化
        opt = BayesianOptimizer("round")
        work_time, break_time = opt.optimize_round(round_explanatory_variable, round_objective_variable)
        print("提案された作業時間: ", work_time)
        print("提案された休憩時間: ", break_time)
        print()

        print("セッション最適化")
        # セッション最適化
        opt = BayesianOptimizer("session")
        total_work_time, session_break_time, number_of_round = opt.optimize_session(session_explanatory_variable, session_objective_variable)
        print("提案されたセッション間休憩時間: ", session_break_time)
        print("提案されたラウンド繰り返し回数: ", number_of_round)
        print()
        print()

        print("[成功]: ベイズ最適化テスト完了")
        print()

    except Exception as e:
        print(f"[失敗]: ベイズ最適化テスト->\n {e}")
        print()

if __name__ == "__main__":
    test_bayesian_optimizer()

service: selfpomodoro-serverless

provider:
  name: aws
  runtime: provided.al2
  region: ap-northeast-1
  stage: ${opt:stage, 'dev'}
  profile: selfpomodoro-dev
  versionFunctions: false

  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
    DB_SSL_MODE: ${env:DB_SSL_MODE}
    COGNITO_USER_POOL_ID: ${env:COGNITO_USER_POOL_ID}
    COGNITO_CLIENT_ID: ${env:COGNITO_CLIENT_ID}
    DYNAMO_USER_CONFIG_TABLE: ${env:DYNAMO_USER_CONFIG_TABLE}
    DYNAMO_ROUND_OPTIMIZATION_TABLE: ${env:DYNAMO_ROUND_OPTIMIZATION_TABLE}
    DYNAMO_SESSION_OPTIMIZATION_TABLE: ${env:DYNAMO_SESSION_OPTIMIZATION_TABLE}
    SQS_ROUND_OPTIMIZATION_URL: ${env:SQS_ROUND_OPTIMIZATION_URL}
    SQS_SESSION_OPTIMIZATION_URL: ${env:SQS_SESSION_OPTIMIZATION_URL}
    LOG_LEVEL: ${env:LOG_LEVEL}
    ENVIRONMENT: ${env:ENVIRONMENT}

functions:
  api-tasks:
    handler: bootstrap
    package:
      artifact: functions/api-tasks/bootstrap.zip
    events:
      # タスク一覧取得
      - http:
          path: /api/v1/tasks
          method: get
          cors: true
      # タスク作成
      - http:
          path: /api/v1/tasks
          method: post
          cors: true
      # タスク更新
      - http:
          path: /api/v1/tasks/{task_id}/edit
          method: patch
          cors: true
      # タスク完了状態切り替え
      - http:
          path: /api/v1/tasks/{task_id}/toggle
          method: patch
          cors: true
      # タスク削除
      - http:
          path: /api/v1/tasks/{task_id}
          method: delete
          cors: true

  api-sessions:
    handler: bootstrap
    package:
      artifact: functions/api-sessions/bootstrap.zip
    events:
      # セッション一覧取得
      - http:
          path: /api/v1/sessions
          method: get
          cors: true
      # セッション開始
      - http:
          path: /api/v1/sessions
          method: post
          cors: true
      # セッション取得
      - http:
          path: /api/v1/sessions/{session_id}
          method: get
          cors: true
      # セッション完了
      - http:
          path: /api/v1/sessions/{session_id}/complete
          method: patch
          cors: true
      # セッション削除
      - http:
          path: /api/v1/sessions/{session_id}
          method: delete
          cors: true

  api-rounds:
    handler: bootstrap
    package:
      artifact: functions/api-rounds/bootstrap.zip
    events:
      # セッションのラウンド一覧取得
      - http:
          path: /api/v1/sessions/{session_id}/rounds
          method: get
          cors: true
      # ラウンド開始
      - http:
          path: /api/v1/sessions/{session_id}/rounds
          method: post
          cors: true
      # ラウンド取得
      - http:
          path: /api/v1/rounds/{round_id}
          method: get
          cors: true
      # ラウンド完了
      - http:
          path: /api/v1/rounds/{round_id}/complete
          method: patch
          cors: true
      # ラウンド中止
      - http:
          path: /api/v1/rounds/{round_id}/abort
          method: post
          cors: true

  api-statistics:
    handler: bootstrap
    package:
      artifact: functions/api-statistics/bootstrap.zip
    events:
      # 集中度トレンド取得
      - http:
          path: /api/v1/statistics/focus-trend
          method: get
          cors: true
      # 集中度ヒートマップ取得
      - http:
          path: /api/v1/statistics/focus-heatmap
          method: get
          cors: true

  # 🎯 PostConfirmation Trigger Lambda関数（新規追加）
  post-confirmation:
    handler: bootstrap
    package:
      artifact: functions/cognito-triggers/post-confirmation/bootstrap.zip
    timeout: 30
    memorySize: 256
    # Cognito Triggerの場合、eventsセクションは不要（resourcesで設定）

package:
  individually: true

# 🎯 AWS Resources定義（Cognito + PostConfirmation統合）
resources:
  Resources:
    # Cognito User Pool（既存のものを参照・更新）
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: selfpomodoro-users-${self:provider.stage}
        # PostConfirmation Trigger設定
        LambdaConfig:
          PostConfirmation: !GetAtt PostDashconfirmationLambdaFunction.Arn
        # 基本設定
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: false
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
        Schema:
          - Name: email
            AttributeDataType: String
            Required: true
            Mutable: true
          - Name: name
            AttributeDataType: String
            Required: false
            Mutable: true
          - Name: given_name
            AttributeDataType: String
            Required: false
            Mutable: true
          - Name: family_name
            AttributeDataType: String
            Required: false
            Mutable: true
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        
    # Cognito User Pool Client（既存のものを参照・更新）
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: selfpomodoro-client-${self:provider.stage}
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
          - USER_PASSWORD_AUTH
        GenerateSecret: false
        TokenValidityUnits:
          AccessToken: hours
          IdToken: hours
          RefreshToken: days
        AccessTokenValidity: 24
        IdTokenValidity: 24
        RefreshTokenValidity: 30

    # PostConfirmation Lambda実行権限
    PostConfirmationLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:invokeFunction
        FunctionName: !GetAtt PostDashconfirmationLambdaFunction.Arn
        Principal: cognito-idp.amazonaws.com
        SourceArn: !GetAtt CognitoUserPool.Arn

  # CloudFormation Outputs（環境変数やAPI確認用）
  Outputs:
    CognitoUserPoolId:
      Description: "Cognito User Pool ID"
      Value: !Ref CognitoUserPool
      
    CognitoUserPoolClientId:
      Description: "Cognito User Pool Client ID"
      Value: !Ref CognitoUserPoolClient
      
    PostConfirmationFunctionArn:
      Description: "PostConfirmation Lambda Function ARN"
      Value: !GetAtt PostDashconfirmationLambdaFunction.Arn
